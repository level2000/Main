{"version":3,"file":"angular-auth-oidc-client.js","sources":["../../index.ts","../../public_api.ts","../../src/angular-auth-oidc-client.ts","../../src/modules/auth.module.ts","../../src/services/oidc.security.service.ts","../../src/services/oidc-security-state-validation.service.ts","../../src/models/validate-state-result.model.ts","../../src/services/uri-encoder.ts","../../src/models/authorization-result.enum.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/auth.well-known-endpoints.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './public_api';\n\nexport {StateValidationService as Éµa} from './src/services/oidc-security-state-validation.service';","/**\n * Angular OpenID Connect Implicit Flow.\n * OpenID Connect Implicit Flow RP Client\n * Written by Damien Bowden.\n * MIT license.\n * https://github.com/damienbod/angular-auth-oidc-client\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './src/angular-auth-oidc-client';\n","// Public classes.\nexport { OidcSecurityService } from './services/oidc.security.service';\nexport { OidcSecurityValidation } from './services/oidc.security.validation';\nexport {\n    OidcSecurityCheckSession\n} from './services/oidc.security.check-session';\nexport { OidcSecuritySilentRenew } from './services/oidc.security.silent-renew';\nexport { OidcSecurityUserService } from './services/oidc.security.user-service';\nexport { OidcSecurityCommon } from './services/oidc.security.common';\nexport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from './services/oidc.security.storage';\nexport { AuthWellKnownEndpoints } from './services/auth.well-known-endpoints';\nexport { AuthorizationResult } from './models/authorization-result.enum';\n\nexport {\n    AuthConfiguration,\n    OpenIDImplicitFlowConfiguration,\n    DefaultConfiguration\n} from './modules/auth.configuration';\nexport { AuthModule } from './modules/auth.module';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from '../services/oidc.security.storage';\nimport { AuthWellKnownEndpoints } from '../services/auth.well-known-endpoints';\nimport { StateValidationService } from '../services/oidc-security-state-validation.service';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                DefaultConfiguration,\n                AuthWellKnownEndpoints,\n                StateValidationService,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n    new (...args: any[]): T;\n}\n\nexport interface Token {\n    storage?: Type<any>;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { PLATFORM_ID, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    AuthConfiguration,\r\n    OpenIDImplicitFlowConfiguration\r\n} from '../modules/auth.configuration';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\r\nimport { JwtKeys } from '../models/jwtkeys';\r\nimport { AuthorizationResult } from '../models/authorization-result.enum';\r\nimport { UriEncoder } from './uri-encoder';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { pluck, take, catchError, timeInterval } from 'rxjs/operators';\r\nimport { StateValidationService } from './oidc-security-state-validation.service';\r\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nexport class OidcSecurityService {\r\n     onModuleSetup: EventEmitter<any> = new EventEmitter<any>(true);\r\n    \r\n    onAuthorizationResult: EventEmitter<AuthorizationResult> = new EventEmitter<\r\n        AuthorizationResult\r\n    >(true);\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any = undefined;\nprivate _userData = new BehaviorSubject<any>('');\nprivate oidcSecurityValidation: OidcSecurityValidation;\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\n/**\n * @param {?} platformId\n * @param {?} http\n * @param {?} stateValidationService\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate platformId: Object,\nprivate http: HttpClient,\nprivate stateValidationService: StateValidationService,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\nsetupModule(\r\n        openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration\r\n    ): void {\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.oidcSecurityValidation = new OidcSecurityValidation(\r\n            this.oidcSecurityCommon\r\n        );\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => {\r\n            this.onCheckSessionChanged();\r\n        });\r\n        this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => {\r\n            this.onWellKnownEndpointsLoaded();\r\n        });\r\n        this._userData.subscribe(() => {\r\n            this.onUserDataChanged();\r\n        });\r\n\r\n        this.oidcSecurityCommon.setupModule();\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData) {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized) {\r\n            this.setIsAuthorized(isAuthorized);\r\n\r\n            // Start the silent renew\r\n            this.runTokenValidation();\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'STS server: ' + this.authConfiguration.stsServer\r\n        );\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(\r\n                () => {\r\n                    this.moduleSetup = true;\r\n                    this.onModuleSetup.emit();\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.oidcSecuritySilentRenew.initRenew();\r\n                    }\r\n\r\n                    if (\r\n                        this.authConfiguration.start_checksession &&\r\n                        !this.oidcSecurityCheckSession.doesSessionExist()\r\n                    ) {\r\n                        this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                            this.oidcSecurityCheckSession.pollServerSession(\r\n                                this.authConfiguration.client_id\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.authWellKnownEndpoints.setupModule();\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.oidcSecurityValidation.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @return {?}\n */\nauthorize() {\r\n        const /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        if (data) {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.oidcSecurityCommon.logError(\r\n                'Well known endpoints must be loaded before user can login!'\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (\r\n            !this.oidcSecurityValidation.config_validate_response_type(\r\n                this.authConfiguration.response_type\r\n            )\r\n        ) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug(\r\n            'AuthorizedController created. local state: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint\r\n        );\r\n        window.location.href = url;\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        const /** @type {?} */ isRenewProcess = silentRenew === 'running';\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'BEGIN authorizedCallback, no auth data'\r\n        );\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        const /** @type {?} */ result: any = hash\r\n            .split('&')\r\n            .reduce(function(resultData: any, item: string) {\r\n                const /** @type {?} */ parts = item.split('=');\r\n                resultData[parts[0]] = parts[1];\r\n                return resultData;\r\n            }, {});\r\n\r\n        this.oidcSecurityCommon.authResult = result;\r\n        this.oidcSecurityCommon.logDebug(result);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'authorizedCallback created, begin token validation'\r\n        );\r\n\r\n        this.getSigningKeys().subscribe(jwtKeys => {\r\n            const /** @type {?} */ validationResult = this.getValidatedStateResult(\r\n                result,\r\n                jwtKeys\r\n            );\r\n\r\n            this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n            if (validationResult.authResponseIsValid) {\r\n                this.setAuthorizationData(\r\n                    validationResult.access_token,\r\n                    validationResult.id_token\r\n                );\r\n                if (this.authConfiguration.auto_userinfo) {\r\n                    this.getUserinfo(\r\n                        isRenewProcess,\r\n                        result,\r\n                        validationResult.id_token,\r\n                        validationResult.decoded_id_token\r\n                    ).subscribe(response => {\r\n                        if (response) {\r\n                            if (\r\n                                this.authConfiguration\r\n                                    .trigger_authorization_result_event\r\n                            ) {\r\n                                this.onAuthorizationResult.emit(\r\n                                    AuthorizationResult.authorized\r\n                                );\r\n                            } else {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.post_login_route\r\n                                ]);\r\n                            }\r\n                        } else {\r\n                            if (\r\n                                this.authConfiguration\r\n                                    .trigger_authorization_result_event\r\n                            ) {\r\n                                this.onAuthorizationResult.emit(\r\n                                    AuthorizationResult.unauthorized\r\n                                );\r\n                            } else {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.unauthorized_route\r\n                                ]);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n\r\n                    // userData is set to the id_token decoded, auto get user data set to false\r\n                    this.oidcSecurityUserService.userData = validationResult.decoded_id_token;\r\n                    this.setUserData(this.oidcSecurityUserService.userData);\r\n                    this.runTokenValidation();\r\n                    if (\r\n                        this.authConfiguration\r\n                            .trigger_authorization_result_event\r\n                    ) {\r\n                        this.onAuthorizationResult.emit(\r\n                            AuthorizationResult.authorized\r\n                        );\r\n                    } else {\r\n                        this.router.navigate([\r\n                            this.authConfiguration.post_login_route\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                // something went wrong\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'authorizedCallback, token(s) validation failed, resetting'\r\n                );\r\n                this.resetAuthorizationData(false);\r\n                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                    this.onAuthorizationResult.emit(\r\n                        AuthorizationResult.unauthorized\r\n                    );\r\n                } else {\r\n                    this.router.navigate([\r\n                        this.authConfiguration.unauthorized_route\r\n                    ]);\r\n                }\r\n            }\r\n        });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(\r\n        isRenewProcess = false,\r\n        result?: any,\r\n        id_token?: any,\r\n        decoded_id_token?: any\r\n    ): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token\r\n            ? decoded_id_token\r\n            : this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService\r\n                        .initUserData()\r\n                        .subscribe(() => {\r\n                            this.oidcSecurityCommon.logDebug(\r\n                                'authorizedCallback id_token token flow'\r\n                            );\r\n                            if (\r\n                                this.oidcSecurityValidation.validate_userdata_sub_id_token(\r\n                                    decoded_id_token.sub,\r\n                                    this.oidcSecurityUserService.userData.sub\r\n                                )\r\n                            ) {\r\n                                this.setUserData(\r\n                                    this.oidcSecurityUserService.userData\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    this.oidcSecurityCommon.accessToken\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    this.oidcSecurityUserService.userData\r\n                                );\r\n\r\n                                this.oidcSecurityCommon.sessionState =\r\n                                    result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else {\r\n                                // something went wrong, userdata sub does not match that from id_token\r\n                                this.oidcSecurityCommon.logWarning(\r\n                                    'authorizedCallback, User data sub does not match sub in id_token'\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    'authorizedCallback, token(s) validation failed, resetting'\r\n                                );\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else {\r\n                // flow id_token\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'authorizedCallback id_token flow'\r\n                );\r\n                this.oidcSecurityCommon.logDebug(\r\n                    this.oidcSecurityCommon.accessToken\r\n                );\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.userData = decoded_id_token;\r\n                this.setUserData(this.oidcSecurityUserService.userData);\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            const /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints\r\n                .end_session_endpoint;\r\n            const /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            const /** @type {?} */ url = this.createEndSessionUrl(\r\n                end_session_endpoint,\r\n                id_token_hint\r\n            );\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                this.checkSessionChanged\r\n            ) {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'only local login cleaned up, server session has changed'\r\n                );\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.oidcSecurityCommon.logDebug(\r\n                'only local login cleaned up, no end_session_endpoint'\r\n            );\r\n        }\r\n    }\n/**\n * @return {?}\n */\nrefreshSession() {\r\n        this.oidcSecurityCommon.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug(\r\n            'RefreshSession created. adding myautostate: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint,\r\n            'none'\r\n        );\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.oidcSecurityCommon.logError(error);\r\n        if (error.status === 403 || error.status === '403') {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status === 401 || error.status === '401') {\r\n            const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n\r\n            this.resetAuthorizationData(!!silentRenew);\r\n\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([\r\n                    this.authConfiguration.unauthorized_route\r\n                ]);\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nprivate getValidatedStateResult(\r\n        result: any,\r\n        jwtKeys: JwtKeys\r\n    ): ValidateStateResult {\r\n        if (result.error) {\r\n            return new ValidateStateResult('', '', false, {});\r\n        }\r\n\r\n        return this.stateValidationService.validateState(result, jwtKeys);\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(access_token);\r\n        this.oidcSecurityCommon.logDebug(id_token);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'storing to storage, getting the roles'\r\n        );\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(\r\n        nonce: string,\r\n        state: string,\r\n        authorization_endpoint: string,\r\n        prompt?: string\r\n    ): string {\r\n        const /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        const /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append(\r\n            'redirect_uri',\r\n            this.authConfiguration.redirect_url\r\n        );\r\n        params = params.append(\r\n            'response_type',\r\n            this.authConfiguration.response_type\r\n        );\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        const /** @type {?} */ customParams = Object.assign(\r\n            {},\r\n            this.oidcSecurityCommon.customRequestParams\r\n        );\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(\r\n        end_session_endpoint: string,\r\n        id_token_hint: string\r\n    ) {\r\n        const /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        const /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append(\r\n            'post_logout_redirect_uri',\r\n            this.authConfiguration.post_logout_redirect_uri\r\n        );\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onCheckSessionChanged() {\r\n        this.oidcSecurityCommon.logDebug('onCheckSessionChanged');\r\n        this.checkSessionChanged = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onWellKnownEndpointsLoaded() {\r\n        this.oidcSecurityCommon.logDebug('onWellKnownEndpointsLoaded');\r\n        this.authWellKnownEndpointsLoaded = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.oidcSecurityCommon.logDebug(\r\n            `onUserDataChanged: last = ${this.lastUserData}, new = ${\r\n                this._userData.value\r\n            }`\r\n        );\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'onUserDataChanged: Logout detected.'\r\n            );\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.oidcSecurityCommon.logDebug(\r\n            'jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri\r\n        );\r\n        return this.http\r\n            .get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .pipe(catchError(this.handleErrorGetSigningKeys));\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\r\n\r\n        const /** @type {?} */ source = timer(5000, 3000).pipe(\r\n            timeInterval(),\r\n            pluck('interval'),\r\n            take(10000)\r\n        );\r\n\r\n        source.subscribe(\r\n            () => {\r\n                if (this._userData.value) {\r\n                    if (\r\n                        this.oidcSecurityValidation.isTokenExpired(\r\n                            this.oidcSecurityCommon.idToken,\r\n                            this.authConfiguration\r\n                                .silent_renew_offset_in_seconds\r\n                        )\r\n                    ) {\r\n                        this.oidcSecurityCommon.logDebug(\r\n                            'IsAuthorized: id_token isTokenExpired, start silent renew if active'\r\n                        );\r\n\r\n                        if (this.authConfiguration.silent_renew) {\r\n                            this.refreshSession();\r\n                        } else {\r\n                            this.resetAuthorizationData(false);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('Error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('Completed');\r\n            }\r\n        );\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: HttpClient, },\n{type: StateValidationService, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.http;\n/** @type {?} */\nOidcSecurityService.prototype.stateValidationService;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { OidcSecurityCommon } from './oidc.security.common';\nimport { OidcSecurityValidation } from './oidc.security.validation';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nimport { JwtKeys } from '../models/jwtkeys';\nexport class StateValidationService {\nprivate oidcSecurityValidation: OidcSecurityValidation;\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\npublic oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\n    ) {\n        this.oidcSecurityValidation = new OidcSecurityValidation(\n            this.oidcSecurityCommon\n        );\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\npublic validateState(result: any, jwtKeys: JwtKeys): ValidateStateResult {\n        const /** @type {?} */ toReturn = new ValidateStateResult('', '', false, {});\n\n        if (\n            !this.oidcSecurityValidation.validateStateFromHashCallback(\n                result.state,\n                this.oidcSecurityCommon.authStateControl\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect state'\n            );\n            return toReturn;\n        }\n\n        if (this.authConfiguration.response_type === 'id_token token') {\n            toReturn.access_token = result.access_token;\n        }\n        toReturn.id_token = result.id_token;\n\n        toReturn.decoded_id_token = this.oidcSecurityValidation.getPayloadFromToken(\n            toReturn.id_token,\n            false\n        );\n\n        if (\n            !this.oidcSecurityValidation.validate_signature_id_token(\n                toReturn.id_token,\n                jwtKeys\n            )\n        ) {\n            this.oidcSecurityCommon.logDebug(\n                'authorizedCallback Signature validation failed id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_nonce(\n                toReturn.decoded_id_token,\n                this.oidcSecurityCommon.authNonce\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect nonce'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_required_id_token(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.oidcSecurityCommon.logDebug(\n                'authorizedCallback Validation, one of the REQUIRED properties missing from id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iat_max_offset(\n                toReturn.decoded_id_token,\n                this.authConfiguration\n                    .max_id_token_iat_offset_allowed_in_seconds\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback Validation, iat rejected id_token was issued too far away from the current time'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iss(\n                toReturn.decoded_id_token,\n                this.authWellKnownEndpoints.issuer\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_aud(\n                toReturn.decoded_id_token,\n                this.authConfiguration.client_id\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect aud'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_exp_not_expired(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback token expired'\n            );\n            return toReturn;\n        }\n\n        // flow id_token token\n        if (this.authConfiguration.response_type !== 'id_token token') {\n            toReturn.authResponseIsValid = true;\n            this.successful_validation();\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_at_hash(\n                toReturn.access_token,\n                toReturn.decoded_id_token.at_hash\n            ) ||\n            !toReturn.access_token\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect at_hash'\n            );\n            return toReturn;\n        }\n\n        toReturn.authResponseIsValid = true;\n        this.successful_validation();\n        return toReturn;\n    }\n/**\n * @return {?}\n */\nprivate successful_validation() {\n        this.oidcSecurityCommon.authNonce = '';\n\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\n            this.oidcSecurityCommon.authStateControl = '';\n        }\n        this.oidcSecurityCommon.logDebug(\n            'AuthorizedCallback token(s) validated, continue'\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction StateValidationService_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValidationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateValidationService.ctorParameters;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityValidation;\n/** @type {?} */\nStateValidationService.prototype.authConfiguration;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityCommon;\n/** @type {?} */\nStateValidationService.prototype.authWellKnownEndpoints;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ValidateStateResult {\n/**\n * @param {?=} access_token\n * @param {?=} id_token\n * @param {?=} authResponseIsValid\n * @param {?=} decoded_id_token\n */\nconstructor(\npublic access_token = '',\npublic id_token = '',\npublic authResponseIsValid = false,\npublic decoded_id_token: any\n    ) {}\n}\n\nfunction ValidateStateResult_tsickle_Closure_declarations() {\n/** @type {?} */\nValidateStateResult.prototype.access_token;\n/** @type {?} */\nValidateStateResult.prototype.id_token;\n/** @type {?} */\nValidateStateResult.prototype.authResponseIsValid;\n/** @type {?} */\nValidateStateResult.prototype.decoded_id_token;\n}\n\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityUserService {\r\n    userData = '';\n/**\n * @param {?} http\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate http: HttpClient,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData().pipe(\r\n            map((data: any) => (this.userData = data))\r\n        );\r\n    }\nprivate getIdentityUserData = (): Observable<any> => {\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        if (token) {\r\n            headers = headers.set(\r\n                'Authorization',\r\n                'Bearer ' + decodeURIComponent(token)\r\n            );\r\n        }\r\n\r\n        return this.http.get(this.authWellKnownEndpoints.userinfo_endpoint, {\r\n            headers: headers\r\n        });\r\n    };\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.getIdentityUserData;\n/** @type {?} */\nOidcSecurityUserService.prototype.http;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {}\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string) {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { pluck, take, timeInterval } from 'rxjs/operators';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\r\n\r\n    \r\n    onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @return {?}\n */\ndoesSessionExist(): boolean {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForCheckSession');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById(\r\n            'myiFrameForCheckSession'\r\n        );\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (existsparent || exists) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        this.sessionIframe = window.document.createElement('iframe');\r\n        this.sessionIframe.id = 'myiFrameForCheckSession';\r\n        this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n        this.sessionIframe.style.display = 'none';\r\n        window.document.body.appendChild(this.sessionIframe);\r\n        this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n        this.iframeMessageEvent = this.messageHandler.bind(this);\r\n        window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        const /** @type {?} */ source = timer(3000, 3000).pipe(\r\n            timeInterval(),\r\n            pluck('interval'),\r\n            take(10000)\r\n        );\r\n\r\n        source.subscribe(\r\n            () => {\r\n                if (this.sessionIframe && clientId) {\r\n                    this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                    const /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                    if (session_state) {\r\n                        this.sessionIframe.contentWindow.postMessage(\r\n                            clientId + ' ' + session_state,\r\n                            this.authConfiguration.stsServer\r\n                        );\r\n                    }\r\n                } else {\r\n                    this.oidcSecurityCommon.logWarning(\r\n                        'OidcSecurityCheckSession pollServerSession sessionIframe does not exist'\r\n                    );\r\n                    this.oidcSecurityCommon.logDebug(clientId);\r\n                    this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                    // this.init();\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError(\r\n                    'pollServerSession error: ' + err\r\n                );\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'checksession pollServerSession completed'\r\n                );\r\n            }\r\n        );\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (\r\n            this.sessionIframe &&\r\n            e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'error from checksession messageHandler'\r\n                );\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    e.data + ' from checksession messageHandler'\r\n                );\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\nexport class AuthWellKnownEndpoints {\r\n    \r\n    onWellKnownEndpointsLoaded: EventEmitter<any> = new EventEmitter<any>(true);\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon\r\n    ) {}\n/**\n * @return {?}\n */\nsetupModule() {\r\n        const /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        this.oidcSecurityCommon.logDebug(data);\r\n        if (data) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'AuthWellKnownEndpoints already defined'\r\n            );\r\n\r\n            this.setWellKnownEndpoints(data);\r\n            this.onWellKnownEndpointsLoaded.emit();\r\n        } else {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'AuthWellKnownEndpoints first time, get from the server'\r\n            );\r\n            this.getWellKnownEndpoints().subscribe((dataFromServer: any) => {\r\n                this.setWellKnownEndpoints(dataFromServer);\r\n\r\n                this.oidcSecurityCommon.wellKnownEndpoints = dataFromServer;\r\n                this.oidcSecurityCommon.logDebug(dataFromServer);\r\n\r\n                this.onWellKnownEndpointsLoaded.emit();\r\n            });\r\n        }\r\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate setWellKnownEndpoints(data: any) {\r\n        this.issuer = data.issuer;\r\n        this.jwks_uri = data.jwks_uri;\r\n        this.authorization_endpoint = data.authorization_endpoint;\r\n        this.token_endpoint = data.token_endpoint;\r\n        this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n        if (data.end_session_endpoint) {\r\n            this.end_session_endpoint = data.end_session_endpoint;\r\n        }\r\n\r\n        if (data.check_session_iframe) {\r\n            this.check_session_iframe = data.check_session_iframe;\r\n        }\r\n\r\n        if (data.revocation_endpoint) {\r\n            this.revocation_endpoint = data.revocation_endpoint;\r\n        }\r\n\r\n        if (data.introspection_endpoint) {\r\n            this.introspection_endpoint = data.introspection_endpoint;\r\n        }\r\n    }\nprivate getWellKnownEndpoints = (): Observable<any> => {\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ url =\r\n            this.authConfiguration.stsServer +\r\n            '/.well-known/openid-configuration';\r\n        if (this.authConfiguration.override_well_known_configuration) {\r\n            url = this.authConfiguration.override_well_known_configuration_url;\r\n        }\r\n\r\n        return this.http.get(url, {\r\n            headers: headers\r\n        });\r\n    };\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onWellKnownEndpointsLoaded': [{ type: Output },],\n};\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthWellKnownEndpoints.ctorParameters;\n/** @type {?} */\nAuthWellKnownEndpoints.propDecorators;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.onWellKnownEndpointsLoaded;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.getWellKnownEndpoints;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.http;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authConfiguration;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\nexport class OidcSecurityValidation {\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {}\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.getPayloadFromToken(token, false);\r\n\r\n        return !this.validate_id_token_exp_not_expired(decoded, offsetSeconds);\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(\r\n        decoded_id_token: string,\r\n        offsetSeconds?: number\r\n    ): boolean {\r\n        const /** @type {?} */ tokenExpirationDate = this.getTokenExpirationDate(\r\n            decoded_id_token\r\n        );\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (!tokenExpirationDate) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (\r\n            tokenExpirationDate.valueOf() >\r\n            new Date().valueOf() + offsetSeconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'iss is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'sub is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'aud is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'exp is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'iat is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(\r\n        dataIdToken: any,\r\n        max_offset_allowed_in_seconds: number\r\n    ): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'validate_id_token_iat_max_offset: ' +\r\n                (new Date().valueOf() - dateTime_iat_id_token.valueOf()) +\r\n                ' < ' +\r\n                max_offset_allowed_in_seconds * 1000\r\n        );\r\n        return (\r\n            new Date().valueOf() - dateTime_iat_id_token.valueOf() <\r\n            max_offset_allowed_in_seconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_nonce failed, dataIdToken.nonce: ' +\r\n                    dataIdToken.nonce +\r\n                    ' local_nonce:' +\r\n                    local_nonce\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(\r\n        dataIdToken: any,\r\n        authWellKnownEndpoints_issuer: any\r\n    ): boolean {\r\n        if (\r\n            ( /** @type {?} */((dataIdToken.iss as string))) !==\r\n            ( /** @type {?} */((authWellKnownEndpoints_issuer as string)))\r\n        ) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_iss failed, dataIdToken.iss: ' +\r\n                    dataIdToken.iss +\r\n                    ' authWellKnownEndpoints issuer:' +\r\n                    authWellKnownEndpoints_issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud instanceof Array) {\r\n            const /** @type {?} */ result = this.arraysEqual(dataIdToken.aud, aud);\r\n            if (!result) {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'Validate_id_token_aud  array failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        } else if (dataIdToken.aud !== aud) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_aud failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n            );\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\nprivate arraysEqual(arr1: Array<string>, arr2: Array<string>) {\r\n        if (arr1.length !== arr2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let /** @type {?} */ i = arr1.length; i--;) {\r\n            if (arr1[i] !== arr2[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (( /** @type {?} */((state as string))) !== ( /** @type {?} */((local_state as string)))) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'ValidateStateFromHashCallback failed, state: ' +\r\n                    state +\r\n                    ' local_state:' +\r\n                    local_state\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(\r\n        id_token_sub: any,\r\n        userdata_sub: any\r\n    ): boolean {\r\n        if (( /** @type {?} */((id_token_sub as string))) !== ( /** @type {?} */((userdata_sub as string)))) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'validate_userdata_sub_id_token failed, id_token_sub: ' +\r\n                    id_token_sub +\r\n                    ' userdata_sub:' +\r\n                    userdata_sub\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[1];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[0];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[2];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ header_data = this.getHeaderFromToken(id_token, false);\r\n\r\n        if (\r\n            Object.keys(header_data).length === 0 &&\r\n            header_data.constructor === Object\r\n        ) {\r\n            this.oidcSecurityCommon.logWarning('id token has no header data');\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ kid = header_data.kid;\r\n        const /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' !== ( /** @type {?} */((alg as string)))) {\r\n            this.oidcSecurityCommon.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (\r\n                    ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                    ( /** @type {?} */((key.use as string))) === 'sig'\r\n                ) {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys === 0) {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'no keys found, incorrect Signature, validation failed for id_token'\r\n                );\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1) {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'no ID Token kid claim in JOSE header and multiple supplied in jwks_uri'\r\n                );\r\n                return false;\r\n            } else {\r\n                for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (\r\n                        ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                        ( /** @type {?} */((key.use as string))) === 'sig'\r\n                    ) {\r\n                        const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                            'RS256'\r\n                        ]);\r\n                        if (!isValid) {\r\n                            this.oidcSecurityCommon.logWarning(\r\n                                'incorrect Signature, validation failed for id_token'\r\n                            );\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (( /** @type {?} */((key.kid as string))) === ( /** @type {?} */((kid as string)))) {\r\n                    const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                        'RS256'\r\n                    ]);\r\n                    if (!isValid) {\r\n                        this.oidcSecurityCommon.logWarning(\r\n                            'incorrect Signature, validation failed for id_token'\r\n                        );\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (\r\n            response_type === 'id_token token' ||\r\n            response_type === 'id_token'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logWarning(\r\n            'module configure incorrect, invalid response_type:' + response_type\r\n        );\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.oidcSecurityCommon.logDebug('From the server:' + at_hash);\r\n        const /** @type {?} */ testdata = this.generate_at_hash('' + access_token);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'client validation not decoded:' + testdata\r\n        );\r\n        if (testdata === ( /** @type {?} */((at_hash as string)))) {\r\n            return true; // isValid;\r\n        } else {\r\n            const /** @type {?} */ testValue = this.generate_at_hash(\r\n                '' + decodeURIComponent(access_token)\r\n            );\r\n            this.oidcSecurityCommon.logDebug('-gen access--' + testValue);\r\n            if (testValue === ( /** @type {?} */((at_hash as string)))) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n        const /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        const /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        const /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n        return testdata;\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nprivate getTokenExpirationDate(dataIdToken: any): Date {\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            return new Date();\r\n        }\r\n\r\n        const /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        date.setUTCSeconds(dataIdToken.exp);\r\n\r\n        return date;\r\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate urlBase64Decode(str: string) {\r\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw Error('Illegal base64url string!');\r\n        }\r\n\r\n        return window.atob(output);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_well_known_endpoints = 'wellknownendpoints';\n/**\n * @return {?}\n */\npublic get wellKnownEndpoints(): any {\r\n        return this.retrieve(this.storage_well_known_endpoints);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set wellKnownEndpoints(value: any) {\r\n        this.store(this.storage_well_known_endpoints, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): { [key: string]: string | number | boolean } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: { [key: string]: string | number | boolean }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityStorage\n */\nconstructor(private authConfiguration: AuthConfiguration,\nprivate oidcSecurityStorage: OidcSecurityStorage) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() { }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\r\n        console.error(message);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\r\n        if (this.authConfiguration.log_console_warning_active) {\r\n            console.warn(message);\r\n        }\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\r\n        if (this.authConfiguration.log_console_debug_active) {\r\n            console.log(message);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_well_known_endpoints;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified\r\n    // by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,\r\n    // or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n    auto_clean_state_after_authentication: true;\r\n    trigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n    override_well_known_configuration = false;\r\n    override_well_known_configuration_url = 'https://localhost:44386/wellknownconfiguration.json';\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n    auto_clean_state_after_authentication: boolean;\r\n    trigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    override_well_known_configuration: boolean;\r\n    override_well_known_configuration_url: string;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.stsServer ||\r\n            this.defaultConfig.stsServer\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.redirect_url ||\r\n            this.defaultConfig.redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.client_id ||\r\n            this.defaultConfig.client_id\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.response_type ||\r\n            this.defaultConfig.response_type\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.resource ||\r\n            this.defaultConfig.resource\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.scope ||\r\n            this.defaultConfig.scope\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.hd_param ||\r\n            this.defaultConfig.hd_param\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_logout_redirect_uri ||\r\n            this.defaultConfig.post_logout_redirect_uri\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.start_checksession\r\n            : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.silent_renew\r\n            : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .silent_renew_offset_in_seconds ||\r\n            this.defaultConfig.silent_renew_offset_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_login_route ||\r\n            this.defaultConfig.post_login_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.forbidden_route ||\r\n            this.defaultConfig.forbidden_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.unauthorized_route ||\r\n            this.defaultConfig.unauthorized_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.auto_userinfo\r\n            : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .auto_clean_state_after_authentication !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .auto_clean_state_after_authentication\r\n            : this.defaultConfig.auto_clean_state_after_authentication;\r\n    }\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .trigger_authorization_result_event !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .trigger_authorization_result_event\r\n            : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .log_console_warning_active !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_warning_active\r\n            : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_debug_active\r\n            : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .max_id_token_iat_offset_allowed_in_seconds ||\r\n            this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .override_well_known_configuration !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .override_well_known_configuration\r\n            : this.defaultConfig.override_well_known_configuration;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .override_well_known_configuration_url ||\r\n            this.defaultConfig.override_well_known_configuration_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.storage ||\r\n            this.defaultConfig.storage\r\n        );\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}