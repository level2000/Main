{"version":3,"file":"angular-auth-oidc-client.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/angular-auth-oidc-client.ts","../../src/modules/auth.module.ts","../../src/services/oidc.security.service.ts","../../src/services/oidc-security-state-validation.service.ts","../../src/models/validate-state-result.model.ts","../../src/services/uri-encoder.ts","../../src/models/authorization-result.enum.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/auth.well-known-endpoints.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './public_api';\n\nexport {StateValidationService as Éµa} from './src/services/oidc-security-state-validation.service';","/**\n * Angular OpenID Connect Implicit Flow.\n * OpenID Connect Implicit Flow RP Client\n * Written by Damien Bowden.\n * MIT license.\n * https://github.com/damienbod/angular-auth-oidc-client\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './src/angular-auth-oidc-client';\n","// Public classes.\nexport { OidcSecurityService } from './services/oidc.security.service';\nexport { OidcSecurityValidation } from './services/oidc.security.validation';\nexport {\n    OidcSecurityCheckSession\n} from './services/oidc.security.check-session';\nexport { OidcSecuritySilentRenew } from './services/oidc.security.silent-renew';\nexport { OidcSecurityUserService } from './services/oidc.security.user-service';\nexport { OidcSecurityCommon } from './services/oidc.security.common';\nexport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from './services/oidc.security.storage';\nexport { AuthWellKnownEndpoints } from './services/auth.well-known-endpoints';\nexport { AuthorizationResult } from './models/authorization-result.enum';\n\nexport {\n    AuthConfiguration,\n    OpenIDImplicitFlowConfiguration,\n    DefaultConfiguration\n} from './modules/auth.configuration';\nexport { AuthModule } from './modules/auth.module';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from '../services/oidc.security.storage';\nimport { AuthWellKnownEndpoints } from '../services/auth.well-known-endpoints';\nimport { StateValidationService } from '../services/oidc-security-state-validation.service';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                DefaultConfiguration,\n                AuthWellKnownEndpoints,\n                StateValidationService,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n    new (...args: any[]): T;\n}\n\nexport interface Token {\n    storage?: Type<any>;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { PLATFORM_ID, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    AuthConfiguration,\r\n    OpenIDImplicitFlowConfiguration\r\n} from '../modules/auth.configuration';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\r\nimport { JwtKeys } from '../models/jwtkeys';\r\nimport { AuthorizationResult } from '../models/authorization-result.enum';\r\nimport { UriEncoder } from './uri-encoder';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { pluck, take, catchError, timeInterval } from 'rxjs/operators';\r\nimport { StateValidationService } from './oidc-security-state-validation.service';\r\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nexport class OidcSecurityService {\r\n     onModuleSetup: EventEmitter<any> = new EventEmitter<any>(true);\r\n    \r\n    onAuthorizationResult: EventEmitter<AuthorizationResult> = new EventEmitter<\r\n        AuthorizationResult\r\n    >(true);\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any = undefined;\nprivate _userData = new BehaviorSubject<any>('');\nprivate oidcSecurityValidation: OidcSecurityValidation;\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\n/**\n * @param {?} platformId\n * @param {?} http\n * @param {?} stateValidationService\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate platformId: Object,\nprivate http: HttpClient,\nprivate stateValidationService: StateValidationService,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\nsetupModule(\r\n        openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration\r\n    ): void {\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.oidcSecurityValidation = new OidcSecurityValidation(\r\n            this.oidcSecurityCommon\r\n        );\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => {\r\n            this.onCheckSessionChanged();\r\n        });\r\n        this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => {\r\n            this.onWellKnownEndpointsLoaded();\r\n        });\r\n        this._userData.subscribe(() => {\r\n            this.onUserDataChanged();\r\n        });\r\n\r\n        this.oidcSecurityCommon.setupModule();\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData) {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized) {\r\n            this.setIsAuthorized(isAuthorized);\r\n\r\n            // Start the silent renew\r\n            this.runTokenValidation();\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'STS server: ' + this.authConfiguration.stsServer\r\n        );\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(\r\n                () => {\r\n                    this.moduleSetup = true;\r\n                    this.onModuleSetup.emit();\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.oidcSecuritySilentRenew.initRenew();\r\n                    }\r\n\r\n                    if (\r\n                        this.authConfiguration.start_checksession &&\r\n                        !this.oidcSecurityCheckSession.doesSessionExist()\r\n                    ) {\r\n                        this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                            this.oidcSecurityCheckSession.pollServerSession(\r\n                                this.authConfiguration.client_id\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.authWellKnownEndpoints.setupModule();\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.oidcSecurityValidation.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @return {?}\n */\nauthorize() {\r\n        const /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        if (data) {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.oidcSecurityCommon.logError(\r\n                'Well known endpoints must be loaded before user can login!'\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (\r\n            !this.oidcSecurityValidation.config_validate_response_type(\r\n                this.authConfiguration.response_type\r\n            )\r\n        ) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug(\r\n            'AuthorizedController created. local state: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint\r\n        );\r\n        window.location.href = url;\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        const /** @type {?} */ isRenewProcess = silentRenew === 'running';\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'BEGIN authorizedCallback, no auth data'\r\n        );\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        const /** @type {?} */ result: any = hash\r\n            .split('&')\r\n            .reduce(function(resultData: any, item: string) {\r\n                const /** @type {?} */ parts = item.split('=');\r\n                resultData[parts[0]] = parts[1];\r\n                return resultData;\r\n            }, {});\r\n\r\n        this.oidcSecurityCommon.authResult = result;\r\n        this.oidcSecurityCommon.logDebug(result);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'authorizedCallback created, begin token validation'\r\n        );\r\n\r\n        this.getSigningKeys().subscribe(jwtKeys => {\r\n            const /** @type {?} */ validationResult = this.getValidatedStateResult(\r\n                result,\r\n                jwtKeys\r\n            );\r\n\r\n            this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n            if (validationResult.authResponseIsValid) {\r\n                this.setAuthorizationData(\r\n                    validationResult.access_token,\r\n                    validationResult.id_token\r\n                );\r\n                if (this.authConfiguration.auto_userinfo) {\r\n                    this.getUserinfo(\r\n                        isRenewProcess,\r\n                        result,\r\n                        validationResult.id_token,\r\n                        validationResult.decoded_id_token\r\n                    ).subscribe(response => {\r\n                        if (response) {\r\n                            if (\r\n                                this.authConfiguration\r\n                                    .trigger_authorization_result_event\r\n                            ) {\r\n                                this.onAuthorizationResult.emit(\r\n                                    AuthorizationResult.authorized\r\n                                );\r\n                            } else {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.post_login_route\r\n                                ]);\r\n                            }\r\n                        } else {\r\n                            if (\r\n                                this.authConfiguration\r\n                                    .trigger_authorization_result_event\r\n                            ) {\r\n                                this.onAuthorizationResult.emit(\r\n                                    AuthorizationResult.unauthorized\r\n                                );\r\n                            } else {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.unauthorized_route\r\n                                ]);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n\r\n                    // userData is set to the id_token decoded, auto get user data set to false\r\n                    this.oidcSecurityUserService.userData = validationResult.decoded_id_token;\r\n                    this.setUserData(this.oidcSecurityUserService.userData);\r\n                    this.runTokenValidation();\r\n                    if (\r\n                        this.authConfiguration\r\n                            .trigger_authorization_result_event\r\n                    ) {\r\n                        this.onAuthorizationResult.emit(\r\n                            AuthorizationResult.authorized\r\n                        );\r\n                    } else {\r\n                        this.router.navigate([\r\n                            this.authConfiguration.post_login_route\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                // something went wrong\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'authorizedCallback, token(s) validation failed, resetting'\r\n                );\r\n                this.resetAuthorizationData(false);\r\n                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                    this.onAuthorizationResult.emit(\r\n                        AuthorizationResult.unauthorized\r\n                    );\r\n                } else {\r\n                    this.router.navigate([\r\n                        this.authConfiguration.unauthorized_route\r\n                    ]);\r\n                }\r\n            }\r\n        });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(\r\n        isRenewProcess = false,\r\n        result?: any,\r\n        id_token?: any,\r\n        decoded_id_token?: any\r\n    ): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token\r\n            ? decoded_id_token\r\n            : this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService\r\n                        .initUserData()\r\n                        .subscribe(() => {\r\n                            this.oidcSecurityCommon.logDebug(\r\n                                'authorizedCallback id_token token flow'\r\n                            );\r\n                            if (\r\n                                this.oidcSecurityValidation.validate_userdata_sub_id_token(\r\n                                    decoded_id_token.sub,\r\n                                    this.oidcSecurityUserService.userData.sub\r\n                                )\r\n                            ) {\r\n                                this.setUserData(\r\n                                    this.oidcSecurityUserService.userData\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    this.oidcSecurityCommon.accessToken\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    this.oidcSecurityUserService.userData\r\n                                );\r\n\r\n                                this.oidcSecurityCommon.sessionState =\r\n                                    result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else {\r\n                                // something went wrong, userdata sub does not match that from id_token\r\n                                this.oidcSecurityCommon.logWarning(\r\n                                    'authorizedCallback, User data sub does not match sub in id_token'\r\n                                );\r\n                                this.oidcSecurityCommon.logDebug(\r\n                                    'authorizedCallback, token(s) validation failed, resetting'\r\n                                );\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else {\r\n                // flow id_token\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'authorizedCallback id_token flow'\r\n                );\r\n                this.oidcSecurityCommon.logDebug(\r\n                    this.oidcSecurityCommon.accessToken\r\n                );\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.userData = decoded_id_token;\r\n                this.setUserData(this.oidcSecurityUserService.userData);\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            const /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints\r\n                .end_session_endpoint;\r\n            const /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            const /** @type {?} */ url = this.createEndSessionUrl(\r\n                end_session_endpoint,\r\n                id_token_hint\r\n            );\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                this.checkSessionChanged\r\n            ) {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'only local login cleaned up, server session has changed'\r\n                );\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.oidcSecurityCommon.logDebug(\r\n                'only local login cleaned up, no end_session_endpoint'\r\n            );\r\n        }\r\n    }\n/**\n * @return {?}\n */\nrefreshSession() {\r\n        this.oidcSecurityCommon.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug(\r\n            'RefreshSession created. adding myautostate: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint,\r\n            'none'\r\n        );\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.oidcSecurityCommon.logError(error);\r\n        if (error.status === 403 || error.status === '403') {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status === 401 || error.status === '401') {\r\n            const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n\r\n            this.resetAuthorizationData(!!silentRenew);\r\n\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([\r\n                    this.authConfiguration.unauthorized_route\r\n                ]);\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nprivate getValidatedStateResult(\r\n        result: any,\r\n        jwtKeys: JwtKeys\r\n    ): ValidateStateResult {\r\n        if (result.error) {\r\n            return new ValidateStateResult('', '', false, {});\r\n        }\r\n\r\n        return this.stateValidationService.validateState(result, jwtKeys);\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(access_token);\r\n        this.oidcSecurityCommon.logDebug(id_token);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'storing to storage, getting the roles'\r\n        );\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(\r\n        nonce: string,\r\n        state: string,\r\n        authorization_endpoint: string,\r\n        prompt?: string\r\n    ): string {\r\n        const /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        const /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append(\r\n            'redirect_uri',\r\n            this.authConfiguration.redirect_url\r\n        );\r\n        params = params.append(\r\n            'response_type',\r\n            this.authConfiguration.response_type\r\n        );\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        const /** @type {?} */ customParams = Object.assign(\r\n            {},\r\n            this.oidcSecurityCommon.customRequestParams\r\n        );\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(\r\n        end_session_endpoint: string,\r\n        id_token_hint: string\r\n    ) {\r\n        const /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        const /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append(\r\n            'post_logout_redirect_uri',\r\n            this.authConfiguration.post_logout_redirect_uri\r\n        );\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onCheckSessionChanged() {\r\n        this.oidcSecurityCommon.logDebug('onCheckSessionChanged');\r\n        this.checkSessionChanged = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onWellKnownEndpointsLoaded() {\r\n        this.oidcSecurityCommon.logDebug('onWellKnownEndpointsLoaded');\r\n        this.authWellKnownEndpointsLoaded = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.oidcSecurityCommon.logDebug(\r\n            `onUserDataChanged: last = ${this.lastUserData}, new = ${\r\n                this._userData.value\r\n            }`\r\n        );\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'onUserDataChanged: Logout detected.'\r\n            );\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.oidcSecurityCommon.logDebug(\r\n            'jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri\r\n        );\r\n        return this.http\r\n            .get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .pipe(catchError(this.handleErrorGetSigningKeys));\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\r\n\r\n        const /** @type {?} */ source = timer(5000, 3000).pipe(\r\n            timeInterval(),\r\n            pluck('interval'),\r\n            take(10000)\r\n        );\r\n\r\n        source.subscribe(\r\n            () => {\r\n                if (this._userData.value) {\r\n                    if (\r\n                        this.oidcSecurityValidation.isTokenExpired(\r\n                            this.oidcSecurityCommon.idToken,\r\n                            this.authConfiguration\r\n                                .silent_renew_offset_in_seconds\r\n                        )\r\n                    ) {\r\n                        this.oidcSecurityCommon.logDebug(\r\n                            'IsAuthorized: id_token isTokenExpired, start silent renew if active'\r\n                        );\r\n\r\n                        if (this.authConfiguration.silent_renew) {\r\n                            this.refreshSession();\r\n                        } else {\r\n                            this.resetAuthorizationData(false);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('Error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('Completed');\r\n            }\r\n        );\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: HttpClient, },\n{type: StateValidationService, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.http;\n/** @type {?} */\nOidcSecurityService.prototype.stateValidationService;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { OidcSecurityCommon } from './oidc.security.common';\nimport { OidcSecurityValidation } from './oidc.security.validation';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nimport { JwtKeys } from '../models/jwtkeys';\nexport class StateValidationService {\nprivate oidcSecurityValidation: OidcSecurityValidation;\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\npublic oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\n    ) {\n        this.oidcSecurityValidation = new OidcSecurityValidation(\n            this.oidcSecurityCommon\n        );\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\npublic validateState(result: any, jwtKeys: JwtKeys): ValidateStateResult {\n        const /** @type {?} */ toReturn = new ValidateStateResult('', '', false, {});\n\n        if (\n            !this.oidcSecurityValidation.validateStateFromHashCallback(\n                result.state,\n                this.oidcSecurityCommon.authStateControl\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect state'\n            );\n            return toReturn;\n        }\n\n        if (this.authConfiguration.response_type === 'id_token token') {\n            toReturn.access_token = result.access_token;\n        }\n        toReturn.id_token = result.id_token;\n\n        toReturn.decoded_id_token = this.oidcSecurityValidation.getPayloadFromToken(\n            toReturn.id_token,\n            false\n        );\n\n        if (\n            !this.oidcSecurityValidation.validate_signature_id_token(\n                toReturn.id_token,\n                jwtKeys\n            )\n        ) {\n            this.oidcSecurityCommon.logDebug(\n                'authorizedCallback Signature validation failed id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_nonce(\n                toReturn.decoded_id_token,\n                this.oidcSecurityCommon.authNonce\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect nonce'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_required_id_token(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.oidcSecurityCommon.logDebug(\n                'authorizedCallback Validation, one of the REQUIRED properties missing from id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iat_max_offset(\n                toReturn.decoded_id_token,\n                this.authConfiguration\n                    .max_id_token_iat_offset_allowed_in_seconds\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback Validation, iat rejected id_token was issued too far away from the current time'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iss(\n                toReturn.decoded_id_token,\n                this.authWellKnownEndpoints.issuer\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_aud(\n                toReturn.decoded_id_token,\n                this.authConfiguration.client_id\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect aud'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_exp_not_expired(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback token expired'\n            );\n            return toReturn;\n        }\n\n        // flow id_token token\n        if (this.authConfiguration.response_type !== 'id_token token') {\n            toReturn.authResponseIsValid = true;\n            this.successful_validation();\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_at_hash(\n                toReturn.access_token,\n                toReturn.decoded_id_token.at_hash\n            ) ||\n            !toReturn.access_token\n        ) {\n            this.oidcSecurityCommon.logWarning(\n                'authorizedCallback incorrect at_hash'\n            );\n            return toReturn;\n        }\n\n        toReturn.authResponseIsValid = true;\n        this.successful_validation();\n        return toReturn;\n    }\n/**\n * @return {?}\n */\nprivate successful_validation() {\n        this.oidcSecurityCommon.authNonce = '';\n\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\n            this.oidcSecurityCommon.authStateControl = '';\n        }\n        this.oidcSecurityCommon.logDebug(\n            'AuthorizedCallback token(s) validated, continue'\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction StateValidationService_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValidationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateValidationService.ctorParameters;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityValidation;\n/** @type {?} */\nStateValidationService.prototype.authConfiguration;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityCommon;\n/** @type {?} */\nStateValidationService.prototype.authWellKnownEndpoints;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ValidateStateResult {\n/**\n * @param {?=} access_token\n * @param {?=} id_token\n * @param {?=} authResponseIsValid\n * @param {?=} decoded_id_token\n */\nconstructor(\npublic access_token = '',\npublic id_token = '',\npublic authResponseIsValid = false,\npublic decoded_id_token: any\n    ) {}\n}\n\nfunction ValidateStateResult_tsickle_Closure_declarations() {\n/** @type {?} */\nValidateStateResult.prototype.access_token;\n/** @type {?} */\nValidateStateResult.prototype.id_token;\n/** @type {?} */\nValidateStateResult.prototype.authResponseIsValid;\n/** @type {?} */\nValidateStateResult.prototype.decoded_id_token;\n}\n\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityUserService {\r\n    userData = '';\n/**\n * @param {?} http\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate http: HttpClient,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData().pipe(\r\n            map((data: any) => (this.userData = data))\r\n        );\r\n    }\nprivate getIdentityUserData = (): Observable<any> => {\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        if (token) {\r\n            headers = headers.set(\r\n                'Authorization',\r\n                'Bearer ' + decodeURIComponent(token)\r\n            );\r\n        }\r\n\r\n        return this.http.get(this.authWellKnownEndpoints.userinfo_endpoint, {\r\n            headers: headers\r\n        });\r\n    };\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.getIdentityUserData;\n/** @type {?} */\nOidcSecurityUserService.prototype.http;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {}\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string) {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { pluck, take, timeInterval } from 'rxjs/operators';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\r\n\r\n    \r\n    onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {}\n/**\n * @return {?}\n */\ndoesSessionExist(): boolean {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForCheckSession');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById(\r\n            'myiFrameForCheckSession'\r\n        );\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (existsparent || exists) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        this.sessionIframe = window.document.createElement('iframe');\r\n        this.sessionIframe.id = 'myiFrameForCheckSession';\r\n        this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n        this.sessionIframe.style.display = 'none';\r\n        window.document.body.appendChild(this.sessionIframe);\r\n        this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n        this.iframeMessageEvent = this.messageHandler.bind(this);\r\n        window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        const /** @type {?} */ source = timer(3000, 3000).pipe(\r\n            timeInterval(),\r\n            pluck('interval'),\r\n            take(10000)\r\n        );\r\n\r\n        source.subscribe(\r\n            () => {\r\n                if (this.sessionIframe && clientId) {\r\n                    this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                    const /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                    if (session_state) {\r\n                        this.sessionIframe.contentWindow.postMessage(\r\n                            clientId + ' ' + session_state,\r\n                            this.authConfiguration.stsServer\r\n                        );\r\n                    }\r\n                } else {\r\n                    this.oidcSecurityCommon.logWarning(\r\n                        'OidcSecurityCheckSession pollServerSession sessionIframe does not exist'\r\n                    );\r\n                    this.oidcSecurityCommon.logDebug(clientId);\r\n                    this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                    // this.init();\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError(\r\n                    'pollServerSession error: ' + err\r\n                );\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'checksession pollServerSession completed'\r\n                );\r\n            }\r\n        );\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (\r\n            this.sessionIframe &&\r\n            e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'error from checksession messageHandler'\r\n                );\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    e.data + ' from checksession messageHandler'\r\n                );\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\nexport class AuthWellKnownEndpoints {\r\n    \r\n    onWellKnownEndpointsLoaded: EventEmitter<any> = new EventEmitter<any>(true);\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon\r\n    ) {}\n/**\n * @return {?}\n */\nsetupModule() {\r\n        const /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        this.oidcSecurityCommon.logDebug(data);\r\n        if (data) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'AuthWellKnownEndpoints already defined'\r\n            );\r\n\r\n            this.setWellKnownEndpoints(data);\r\n            this.onWellKnownEndpointsLoaded.emit();\r\n        } else {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'AuthWellKnownEndpoints first time, get from the server'\r\n            );\r\n            this.getWellKnownEndpoints().subscribe((dataFromServer: any) => {\r\n                this.setWellKnownEndpoints(dataFromServer);\r\n\r\n                this.oidcSecurityCommon.wellKnownEndpoints = dataFromServer;\r\n                this.oidcSecurityCommon.logDebug(dataFromServer);\r\n\r\n                this.onWellKnownEndpointsLoaded.emit();\r\n            });\r\n        }\r\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate setWellKnownEndpoints(data: any) {\r\n        this.issuer = data.issuer;\r\n        this.jwks_uri = data.jwks_uri;\r\n        this.authorization_endpoint = data.authorization_endpoint;\r\n        this.token_endpoint = data.token_endpoint;\r\n        this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n        if (data.end_session_endpoint) {\r\n            this.end_session_endpoint = data.end_session_endpoint;\r\n        }\r\n\r\n        if (data.check_session_iframe) {\r\n            this.check_session_iframe = data.check_session_iframe;\r\n        }\r\n\r\n        if (data.revocation_endpoint) {\r\n            this.revocation_endpoint = data.revocation_endpoint;\r\n        }\r\n\r\n        if (data.introspection_endpoint) {\r\n            this.introspection_endpoint = data.introspection_endpoint;\r\n        }\r\n    }\nprivate getWellKnownEndpoints = (): Observable<any> => {\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ url =\r\n            this.authConfiguration.stsServer +\r\n            '/.well-known/openid-configuration';\r\n        if (this.authConfiguration.override_well_known_configuration) {\r\n            url = this.authConfiguration.override_well_known_configuration_url;\r\n        }\r\n\r\n        return this.http.get(url, {\r\n            headers: headers\r\n        });\r\n    };\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onWellKnownEndpointsLoaded': [{ type: Output },],\n};\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthWellKnownEndpoints.ctorParameters;\n/** @type {?} */\nAuthWellKnownEndpoints.propDecorators;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.onWellKnownEndpointsLoaded;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.getWellKnownEndpoints;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.http;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authConfiguration;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\nexport class OidcSecurityValidation {\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {}\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.getPayloadFromToken(token, false);\r\n\r\n        return !this.validate_id_token_exp_not_expired(decoded, offsetSeconds);\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(\r\n        decoded_id_token: string,\r\n        offsetSeconds?: number\r\n    ): boolean {\r\n        const /** @type {?} */ tokenExpirationDate = this.getTokenExpirationDate(\r\n            decoded_id_token\r\n        );\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (!tokenExpirationDate) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (\r\n            tokenExpirationDate.valueOf() >\r\n            new Date().valueOf() + offsetSeconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'iss is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'sub is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'aud is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'exp is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning(\r\n                'iat is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(\r\n        dataIdToken: any,\r\n        max_offset_allowed_in_seconds: number\r\n    ): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(\r\n            'validate_id_token_iat_max_offset: ' +\r\n                (new Date().valueOf() - dateTime_iat_id_token.valueOf()) +\r\n                ' < ' +\r\n                max_offset_allowed_in_seconds * 1000\r\n        );\r\n        return (\r\n            new Date().valueOf() - dateTime_iat_id_token.valueOf() <\r\n            max_offset_allowed_in_seconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_nonce failed, dataIdToken.nonce: ' +\r\n                    dataIdToken.nonce +\r\n                    ' local_nonce:' +\r\n                    local_nonce\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(\r\n        dataIdToken: any,\r\n        authWellKnownEndpoints_issuer: any\r\n    ): boolean {\r\n        if (\r\n            ( /** @type {?} */((dataIdToken.iss as string))) !==\r\n            ( /** @type {?} */((authWellKnownEndpoints_issuer as string)))\r\n        ) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_iss failed, dataIdToken.iss: ' +\r\n                    dataIdToken.iss +\r\n                    ' authWellKnownEndpoints issuer:' +\r\n                    authWellKnownEndpoints_issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud instanceof Array) {\r\n            const /** @type {?} */ result = this.arraysEqual(dataIdToken.aud, aud);\r\n            if (!result) {\r\n                this.oidcSecurityCommon.logDebug(\r\n                    'Validate_id_token_aud  array failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        } else if (dataIdToken.aud !== aud) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'Validate_id_token_aud failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n            );\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\nprivate arraysEqual(arr1: Array<string>, arr2: Array<string>) {\r\n        if (arr1.length !== arr2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let /** @type {?} */ i = arr1.length; i--;) {\r\n            if (arr1[i] !== arr2[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (( /** @type {?} */((state as string))) !== ( /** @type {?} */((local_state as string)))) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'ValidateStateFromHashCallback failed, state: ' +\r\n                    state +\r\n                    ' local_state:' +\r\n                    local_state\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(\r\n        id_token_sub: any,\r\n        userdata_sub: any\r\n    ): boolean {\r\n        if (( /** @type {?} */((id_token_sub as string))) !== ( /** @type {?} */((userdata_sub as string)))) {\r\n            this.oidcSecurityCommon.logDebug(\r\n                'validate_userdata_sub_id_token failed, id_token_sub: ' +\r\n                    id_token_sub +\r\n                    ' userdata_sub:' +\r\n                    userdata_sub\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[1];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[0];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            const /** @type {?} */ encoded = token.split('.')[2];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ header_data = this.getHeaderFromToken(id_token, false);\r\n\r\n        if (\r\n            Object.keys(header_data).length === 0 &&\r\n            header_data.constructor === Object\r\n        ) {\r\n            this.oidcSecurityCommon.logWarning('id token has no header data');\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ kid = header_data.kid;\r\n        const /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' !== ( /** @type {?} */((alg as string)))) {\r\n            this.oidcSecurityCommon.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (\r\n                    ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                    ( /** @type {?} */((key.use as string))) === 'sig'\r\n                ) {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys === 0) {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'no keys found, incorrect Signature, validation failed for id_token'\r\n                );\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1) {\r\n                this.oidcSecurityCommon.logWarning(\r\n                    'no ID Token kid claim in JOSE header and multiple supplied in jwks_uri'\r\n                );\r\n                return false;\r\n            } else {\r\n                for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (\r\n                        ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                        ( /** @type {?} */((key.use as string))) === 'sig'\r\n                    ) {\r\n                        const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                            'RS256'\r\n                        ]);\r\n                        if (!isValid) {\r\n                            this.oidcSecurityCommon.logWarning(\r\n                                'incorrect Signature, validation failed for id_token'\r\n                            );\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (( /** @type {?} */((key.kid as string))) === ( /** @type {?} */((kid as string)))) {\r\n                    const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                        'RS256'\r\n                    ]);\r\n                    if (!isValid) {\r\n                        this.oidcSecurityCommon.logWarning(\r\n                            'incorrect Signature, validation failed for id_token'\r\n                        );\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (\r\n            response_type === 'id_token token' ||\r\n            response_type === 'id_token'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logWarning(\r\n            'module configure incorrect, invalid response_type:' + response_type\r\n        );\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.oidcSecurityCommon.logDebug('From the server:' + at_hash);\r\n        const /** @type {?} */ testdata = this.generate_at_hash('' + access_token);\r\n        this.oidcSecurityCommon.logDebug(\r\n            'client validation not decoded:' + testdata\r\n        );\r\n        if (testdata === ( /** @type {?} */((at_hash as string)))) {\r\n            return true; // isValid;\r\n        } else {\r\n            const /** @type {?} */ testValue = this.generate_at_hash(\r\n                '' + decodeURIComponent(access_token)\r\n            );\r\n            this.oidcSecurityCommon.logDebug('-gen access--' + testValue);\r\n            if (testValue === ( /** @type {?} */((at_hash as string)))) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n        const /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        const /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        const /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n        return testdata;\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nprivate getTokenExpirationDate(dataIdToken: any): Date {\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            return new Date();\r\n        }\r\n\r\n        const /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        date.setUTCSeconds(dataIdToken.exp);\r\n\r\n        return date;\r\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate urlBase64Decode(str: string) {\r\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw Error('Illegal base64url string!');\r\n        }\r\n\r\n        return window.atob(output);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_well_known_endpoints = 'wellknownendpoints';\n/**\n * @return {?}\n */\npublic get wellKnownEndpoints(): any {\r\n        return this.retrieve(this.storage_well_known_endpoints);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set wellKnownEndpoints(value: any) {\r\n        this.store(this.storage_well_known_endpoints, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): { [key: string]: string | number | boolean } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: { [key: string]: string | number | boolean }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityStorage\n */\nconstructor(private authConfiguration: AuthConfiguration,\nprivate oidcSecurityStorage: OidcSecurityStorage) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() { }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\r\n        console.error(message);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\r\n        if (this.authConfiguration.log_console_warning_active) {\r\n            console.warn(message);\r\n        }\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\r\n        if (this.authConfiguration.log_console_debug_active) {\r\n            console.log(message);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_well_known_endpoints;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified\r\n    // by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,\r\n    // or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n    auto_clean_state_after_authentication: true;\r\n    trigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n    override_well_known_configuration = false;\r\n    override_well_known_configuration_url = 'https://localhost:44386/wellknownconfiguration.json';\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n    auto_clean_state_after_authentication: boolean;\r\n    trigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    override_well_known_configuration: boolean;\r\n    override_well_known_configuration_url: string;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.stsServer ||\r\n            this.defaultConfig.stsServer\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.redirect_url ||\r\n            this.defaultConfig.redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.client_id ||\r\n            this.defaultConfig.client_id\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.response_type ||\r\n            this.defaultConfig.response_type\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.resource ||\r\n            this.defaultConfig.resource\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.scope ||\r\n            this.defaultConfig.scope\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.hd_param ||\r\n            this.defaultConfig.hd_param\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_logout_redirect_uri ||\r\n            this.defaultConfig.post_logout_redirect_uri\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.start_checksession\r\n            : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.silent_renew\r\n            : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .silent_renew_offset_in_seconds ||\r\n            this.defaultConfig.silent_renew_offset_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_login_route ||\r\n            this.defaultConfig.post_login_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.forbidden_route ||\r\n            this.defaultConfig.forbidden_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.unauthorized_route ||\r\n            this.defaultConfig.unauthorized_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.auto_userinfo\r\n            : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .auto_clean_state_after_authentication !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .auto_clean_state_after_authentication\r\n            : this.defaultConfig.auto_clean_state_after_authentication;\r\n    }\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .trigger_authorization_result_event !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .trigger_authorization_result_event\r\n            : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .log_console_warning_active !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_warning_active\r\n            : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_debug_active\r\n            : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .max_id_token_iat_offset_allowed_in_seconds ||\r\n            this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .override_well_known_configuration !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .override_well_known_configuration\r\n            : this.defaultConfig.override_well_known_configuration;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .override_well_known_configuration_url ||\r\n            this.defaultConfig.override_well_known_configuration_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.storage ||\r\n            this.defaultConfig.storage\r\n        );\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}